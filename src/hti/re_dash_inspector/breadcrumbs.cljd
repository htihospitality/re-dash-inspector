(ns hti.re-dash-inspector.breadcrumbs
  (:require ["package:flutter/material.dart" :as m]
            ["package:devtools_app_shared/ui.dart" :as ui]
            [cljd.flutter :as f]
            [hti.re-dash.core :as rd]
            [hti.re-dash-inspector.debouncer :as debouncer]
            [hti.re-dash-inspector.async :as async]
            [clojure.string :as string]))

(def editable-view
  (f/widget

    :get {^m/TextEditingController path-controller :path-controller}

    :managed [debouncer (debouncer/->debouncer)
              focus-node (m/FocusNode)]

    :watch [focused? (f/sub focus-node (fn [_] (.-hasFocus focus-node)))]

    :let [should-update-controller-value? (not focused?)]

    :watch [selected-path (rd/subscribe [:rd.inspector/selected-path])
            selected-path-error? (rd/subscribe [:rd.inspector/selected-path-error?])

            _ (async/defer
                #(when should-update-controller-value?
                   (.-text! path-controller (str selected-path))))]

    (m/TextField
      .focusNode focus-node
      .decoration (m/InputDecoration
                    .border (m/OutlineInputBorder)
                    .labelText "Path"
                    .prefixIcon (m/InkWell
                                  .child (m/Icon (m/Icons.swap_horiz))
                                  .onTap #(rd/dispatch [:rd.inspector/toggle-selected-path-editable?]))
                    .errorText (when selected-path-error? "Invalid EDN path vector"))
      .onChanged (fn [path]
                   (.debounce debouncer
                              (Duration .milliseconds 250)
                              #(if (string/blank? path)
                                 (rd/dispatch [:rd.inspector/clear-selected-path])
                                 (rd/dispatch [:rd.inspector/set-selected-path path]))))
      .controller path-controller)))

(def non-editable-view
  (f/widget

    :watch [selected-path (rd/subscribe [:rd.inspector/selected-path])]

    (f/widget
      (m/Wrap
        .children
        (concat
          [(f/widget
             (m/Padding .padding (m/EdgeInsets.only .top 3))
             (m/InkWell
               .onTap #(rd/dispatch [:rd.inspector/toggle-selected-path-editable?]))
             (m/Icon (m/Icons.edit) .size ui/tableIconSize))
           (m/SizedBox .width 5)
           (f/widget
             (m/InkWell
               .onTap #(rd/dispatch [:rd.inspector/clear-selected-path]))
             (m/Text "/ root"))]
          (map-indexed
            (fn [idx crumb]
              (f/widget
                (m/InkWell
                  .onTap #(rd/dispatch [:rd.inspector/update-selected-path idx]))
                (m/Container
                  .constraints (m/BoxConstraints .maxWidth 1000))
                (m/Text (str " / " (pr-str crumb))
                        .overflow m/TextOverflow.ellipsis)))
            selected-path))))))

(def view
  "When selecting an item from the table,
  breadcrumbs will show the way back."
  (f/widget

    :watch [editable? (rd/subscribe [:rd.inspector/selected-path-editable?])]

    (m/Align
      .alignment m/Alignment.centerLeft)
    (m/Column
      .mainAxisAlignment m/MainAxisAlignment.center
      .children
      [(m/SizedBox .height 3)
       (if editable?
         editable-view
         non-editable-view)
       (m/SizedBox .height 10)])))
