(ns hti.re-dash-inspector.breadcrumbs
  (:require ["package:flutter/material.dart" :as m]
            ["package:devtools_app_shared/ui.dart" :as ui]
            [cljd.flutter :as f]
            [hti.re-dash.core :as rd]
            [hti.re-dash-inspector.debouncer :as debouncer]
            [hti.re-dash-inspector.async :as async]
            [clojure.string :as string]
            [cljd.reader :as r]))

(def editable-view
  (f/widget

    :get {^m/TextEditingController path-controller :path-controller}

    :managed [debouncer (debouncer/->debouncer)]

    :watch [selected-path (rd/subscribe [:rd.inspector/selected-path])

            _ (async/defer #(.-value! path-controller
                                      (let [selected-path' (str selected-path)]
                                        (m/TextEditingValue
                                          .text selected-path'
                                          .selection (m/TextSelection.fromPosition
                                                       (m/TextPosition .offset (count selected-path')))))))]

    (ui/DevToolsClearableTextField
      .labelText "Path"
      .prefixIcon (m/InkWell
                    .child (m/Icon (m/Icons.swap_horiz))
                    .onTap #(rd/dispatch [:rd.inspector/toggle-selected-path-editable?]))
      .onChanged (fn [path]
                   (.debounce debouncer
                              (Duration .milliseconds 250)
                              #(if (string/blank? path)
                                 (rd/dispatch [:rd.inspector/clear-selected-path])
                                 (rd/dispatch [:rd.inspector/set-selected-path (r/read-string path)]))))
      .controller path-controller)))

(def non-editable-view
  (f/widget

    :watch [selected-path (rd/subscribe [:rd.inspector/selected-path])]

    (f/widget
      (m/Row
        .children
        [(m/IconButton
           .icon (m/Icon (m/Icons.edit) .size ui/tableIconSize)
           .onPressed #(rd/dispatch [:rd.inspector/toggle-selected-path-editable?]))
         (m/Wrap
           .children
           (concat
             [(m/SizedBox .width 3)
              (f/widget
                (m/InkWell
                  .onTap #(rd/dispatch [:rd.inspector/clear-selected-path]))
                (m/Text "/ root"))]
             (map-indexed
               (fn [idx crumb]
                 (f/widget
                   (m/InkWell
                     .onTap #(rd/dispatch [:rd.inspector/update-selected-path idx]))
                   (m/Container
                     .constraints (m/BoxConstraints .maxWidth 1000))
                   (m/Text (str " / " (pr-str crumb))
                           .overflow m/TextOverflow.ellipsis)))
               selected-path)))]))))

(def view
  "When selecting an item from the table,
  breadcrumbs will show the way back."
  (f/widget

    :watch [editable? (rd/subscribe [:rd.inspector/selected-path-editable?])]

    (m/Align
      .alignment m/Alignment.centerLeft)
    (m/Column
      .mainAxisAlignment m/MainAxisAlignment.center
      .children
      [(m/SizedBox .height 3)
       (if editable?
         editable-view
         non-editable-view)
       (m/SizedBox .height 10)])))
